#include <iostream>
#include <cmath>
using namespace std;

int main() {
    int n;
    cout << "Enter number of equations (n): ";
    cin >> n;

    float a[20][20], b[20], x[20] = {0};

    cout << "\nEnter coefficients of equations (a[i][j]) row-wise:\n";
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < n; j++) {
            cout << "a[" << i+1 << "][" << j+1 << "] = ";
            cin >> a[i][j];
        }
    }

    cout << "\nEnter constants (b[i]):\n";
    for(int i = 0; i < n; i++) {
        cout << "b[" << i+1 << "] = ";
        cin >> b[i];
    }

    // 🔹 Check Diagonal Dominance
    bool dominant = true;
    for(int i = 0; i < n; i++) {
        float sum = 0;
        for(int j = 0; j < n; j++) {
            if(i != j) sum += fabs(a[i][j]);
        }
        if(fabs(a[i][i]) < sum) {
            dominant = false;
            break;
        }
    }

    if(!dominant) {
        cout << "\n❌ System is NOT diagonally dominant. Gauss–Seidel may not converge.\n";
        return 0;
    } else {
        cout << "\n✅ System is diagonally dominant. Proceeding with Gauss–Seidel Method...\n";
    }

    int iter = 0;
    float eps = 0.0001;
    bool conv;

    cout << "\nIteration\t";
    for(int i = 0; i < n; i++) cout << "x" << i+1 << "\t";
    cout << endl;

    do {
        iter++;
        conv = true;

        for(int i = 0; i < n; i++) {
            float sum = b[i];
            for(int j = 0; j < n; j++) {
                if(i != j)
                    sum -= a[i][j] * x[j];
            }

            float x_new = sum / a[i][i];

            if(fabs(x_new - x[i]) > eps)
                conv = false;

            x[i] = x_new;
        }

        cout << iter << "\t\t";
        for(int i = 0; i < n; i++)
            cout << x[i] << "\t";
        cout << endl;

    } while(!conv && iter < 100);

    cout << "\n✅ Final Solution:\n";
    for(int i = 0; i < n; i++)
        cout << "x" << i+1 << " = " << x[i] << endl;

    return 0;
}
